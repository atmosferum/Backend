stages:
  - build
  - image

.docker_login: &docker_login
  - mkdir -p /kaniko/.docker
  - echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json

cache:
  paths:
    - .m2/repository

variables:
  MAVEN_OPTS: '-Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository'

#Test:
#  stage: test
#  image: maven:3.8.6-openjdk-18
#  script:
#    - mvn test

Build jar:
  stage: build
  image: maven:3.8.6-openjdk-18
  script:
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - target/*.jar

Build an image:
  stage: image
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [ "" ]
  dependencies:
    - Build jar
  before_script:
    - *docker_login
    - cd target
    - java -jar -Djarmode=layertools whattime-0.0.1-SNAPSHOT.jar extract
    - if [ $CI_COMMIT_TAG == '' ]; then APP_VERSION=${CI_COMMIT_SHORT_SHA} fi
  script:
    - >-
      /kaniko/executor
      --context "${CI_PROJECT_DIR}/target"
      --dockerfile "${CI_PROJECT_DIR}/delivery/docker/Dockerfile"
      --build-arg "JAR_FOLDER=${CI_PROJECT_DIR}/target"
      --destination "${CI_REGISTRY_IMAGE}:${APP_VERSION}"